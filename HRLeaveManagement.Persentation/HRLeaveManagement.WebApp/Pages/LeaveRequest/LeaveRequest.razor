@page "/leaveRequest"
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@inject IleaveRequestService leaveRequestService
@inject NavigationManager Navigation

<h3>Leaves List </h3>

@if (errorMessage != null)
{
    <div class="alert alert-danger">@errorMessage</div>
}
else if (leaveTypes == null)
{
    <div class="text-center">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="mb-3">
        <button class="btn btn-primary" @onclick="NavigateToCreate">
            <i class="fas fa-plus"></i> Create New
        </button>
    </div>

    <table class="table table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Leave Type</th>

                <th>#No Leave</th>
                <th>shift</th>

                <th>status</th>
                <th>Description</th>
                <th>Star Date</th>
                <th>End Date</th>
                <th>Operation</th>


            </tr>
        </thead>
        <tbody>
            @foreach (var item in leaveTypes)
            {
                <tr>
                    <td>@item.LeaveTypeID</td>
                    <td>@item.FullName</td>
                    <td>@item.LeaveTypeName</td>

                    <td>@item.LeaveAmount</td>
                    <td>@item.shift</td>

                    <td>@item.Status</td>
                    <td>@item.Description</td>
                    <td>@item.StartDate.ToShortDateString()</td>
                    <td>@item.EndDate.ToShortDateString()</td>

                    <td>
                        <button class="btn btn-sm btn-primary" @onclick="() => NavigateToEdit(item.LeaveTypeID)">
                            <i class="fas fa-edit"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-danger ms-2" @onclick="() => NavigateToDelete(item.LeaveTypeID)">
                            <i class="fas fa-trash"></i> Delete
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<LeaveRequestViewModel>? leaveTypes;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            leaveTypes = await leaveRequestService.GetLeaveRequests() ?? new List<LeaveRequestViewModel>();
        }
        catch (Exception ex)
        {
            errorMessage = $"Failed to load leave types: {ex.Message}";
            Console.Error.WriteLine(ex);
        }
    }

    private void NavigateToCreate()
    {
        Navigation.NavigateTo("/leaverequests/create");
    }

    private void NavigateToEdit(int id)
    {
        Navigation.NavigateTo($"/leavetype/edit/{id}");
    }

    private async Task NavigateToDelete(int id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this leave type?"))
        {
            var result = await leaveRequestService.DeleteLeaveRequest(id);
            //if (result)
            {
                await OnInitializedAsync();
            }
        }
    }
}
