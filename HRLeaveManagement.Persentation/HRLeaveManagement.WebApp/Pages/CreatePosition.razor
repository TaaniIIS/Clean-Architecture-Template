@page "/CreatePosition"
@using HRLeaveManagement.WebApp.Services
@using HRLeaveManagement.Application.Features.Position
@using HRLeaveManagement.Application.Response
@inject IPositionService PositionService
@inject NavigationManager Navigation

<h3>Create New Position</h3>

<EditForm Model="_positionDto" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Title</label>
        <InputText @bind-Value="_positionDto.Title" class="form-control" />
        <ValidationMessage For="@(() => _positionDto.Title)" />
    </div>

    <div class="form-group">
        <label>Job Level</label>
        <InputText @bind-Value="_positionDto.JobLevel" class="form-control" />
        <ValidationMessage For="@(() => _positionDto.JobLevel)" />
    </div>

    <div class="form-group form-check">
        <InputCheckbox @bind-Value="_positionDto.IsActive" class="form-check-input" />
        <label class="form-check-label">Is Active</label>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Create Position</button>
</EditForm>

@if (_message != null)
{
    <div class="alert @(_isSuccess ? "alert-success" : "alert-danger") mt-3">
        @_message
    </div>
}

@code {
    private PositionDto _positionDto = new();
    private string? _message;
    private bool _isSuccess;

    private async Task HandleValidSubmit()
    {
        try
        {
            var command = new  HRLeaveManagement.Application.Features.Position.Commands.CreatePosition.CreatePositionCommand
                {
                    CreatePosition = _positionDto
                };

            var result = await PositionService.Post(_positionDto);

            _isSuccess = result.Success;
            _message = result.Message;

            if (result.Success)
            {
                // Reset form on success
                _positionDto = new PositionDto();

                // Navigate after delay to show success message
                await Task.Delay(2000);
                Navigation.NavigateTo("/getposition");
            }
        }
        catch (Exception ex)
        {
            _isSuccess = false;
            _message = $"An error occurred: {ex.Message}";
        }
    }
}

